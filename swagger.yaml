openapi: 3.0.0
info:
    title: Medical Booking API
    description: Made by - P's Get Degrees
    contact:
        name: Go to the Front End
        url: https://api-medical-booking.herokuapp.com/
    version: "1.0"
servers:
    - url: https://api-medical-booking.herokuapp.com/api/v1
      variables: {}
paths:
    /auth/register:
        post:
            tags:
                - auth
            summary: Register
            operationId: Register
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - email
                                - password
                                - role
                                - name
                                - surname
                                - gender
                                - nationality
                                - mobile
                                - address
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: user@gmail.com
                                    pattern: '/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/'
                                password:
                                    type: string
                                    example: User1234!
                                    description: "Must have minimum eight characters, at least one upper case English letter, one lower case English letter, one number and one special character"
                                    pattern: "/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/"
                                role:
                                    type: string
                                    example: patient
                                    enum: [patient, doctor, admin]
                                name:
                                    type: string
                                    example: Robert
                                    minLength: 3
                                    maxLength: 50
                                    pattern: "/^[A-Za-z-]+$/"
                                surname:
                                    type: string
                                    example: Alexander
                                    minLength: 3
                                    maxLength: 50
                                    pattern: "/^[A-Za-z-]+$/"
                                gender:
                                    type: string
                                    example: other
                                    enum: [other, male, female]
                                nationality:
                                    type: string
                                    example: other
                                    enum:
                                        [
                                            "Afghan",
                                            "Albanian",
                                            "Algerian",
                                            "American",
                                            "Andorran",
                                            "Angolan",
                                            "Antiguans",
                                            "Argentinean",
                                            "Armenian",
                                            "Australian",
                                            "Austrian",
                                            "Azerbaijani",
                                            "Bahamian",
                                            "Bahraini",
                                            "Bangladeshi",
                                            "Barbadian",
                                            "Barbudans",
                                            "Batswana",
                                            "Belarusian",
                                            "Belgian",
                                            "Belizean",
                                            "Beninese",
                                            "Bhutanese",
                                            "Bolivian",
                                            "Bosnian",
                                            "Brazilian",
                                            "British",
                                            "Bruneian",
                                            "Bulgarian",
                                            "Burkinabe",
                                            "Burmese",
                                            "Burundian",
                                            "Cambodian",
                                            "Cameroonian",
                                            "Canadian",
                                            "Cape Verdean",
                                            "Central African",
                                            "Chadian",
                                            "Chilean",
                                            "Chinese",
                                            "Colombian",
                                            "Comoran",
                                            "Congolese",
                                            "Costa Rican",
                                            "Croatian",
                                            "Cuban",
                                            "Cypriot",
                                            "Czech",
                                            "Danish",
                                            "Djibouti",
                                            "Dominican",
                                            "Dutch",
                                            "East Timorese",
                                            "Ecuadorean",
                                            "Egyptian",
                                            "Emirian",
                                            "Equatorial Guinean",
                                            "Eritrean",
                                            "Estonian",
                                            "Ethiopian",
                                            "Fijian",
                                            "Filipino",
                                            "Finnish",
                                            "French",
                                            "Gabonese",
                                            "Gambian",
                                            "Georgian",
                                            "German",
                                            "Ghanaian",
                                            "Greek",
                                            "Grenadian",
                                            "Guatemalan",
                                            "Guinea-Bissauan",
                                            "Guinean",
                                            "Guyanese",
                                            "Haitian",
                                            "Herzegovinian",
                                            "Honduran",
                                            "Hungarian",
                                            "I-Kiribati",
                                            "Icelander",
                                            "Indian",
                                            "Indonesian",
                                            "Iranian",
                                            "Iraqi",
                                            "Irish",
                                            "Israeli",
                                            "Italian",
                                            "Ivorian",
                                            "Jamaican",
                                            "Japanese",
                                            "Jordanian",
                                            "Kazakhstani",
                                            "Kenyan",
                                            "Kittian and Nevisian",
                                            "Kuwaiti",
                                            "Kyrgyz",
                                            "Laotian",
                                            "Latvian",
                                            "Lebanese",
                                            "Liberian",
                                            "Libyan",
                                            "Liechtensteiner",
                                            "Lithuanian",
                                            "Luxembourger",
                                            "Macedonian",
                                            "Malagasy",
                                            "Malawian",
                                            "Malaysian",
                                            "Maldivian",
                                            "Malian",
                                            "Maltese",
                                            "Marshallese",
                                            "Mauritanian",
                                            "Mauritian",
                                            "Mexican",
                                            "Micronesian",
                                            "Moldovan",
                                            "Monacan",
                                            "Mongolian",
                                            "Moroccan",
                                            "Mosotho",
                                            "Motswana",
                                            "Mozambican",
                                            "Namibian",
                                            "Nauruan",
                                            "Nepalese",
                                            "New Zealander",
                                            "Ni-Vanuatu",
                                            "Nicaraguan",
                                            "Nigerian",
                                            "Nigerien",
                                            "North Korean",
                                            "Northern Irish",
                                            "Norwegian",
                                            "Omani",
                                            "Pakistani",
                                            "Palauan",
                                            "Panamanian",
                                            "Papua New Guinean",
                                            "Paraguayan",
                                            "Peruvian",
                                            "Polish",
                                            "Portuguese",
                                            "Qatari",
                                            "Romanian",
                                            "Russian",
                                            "Rwandan",
                                            "Saint Lucian",
                                            "Salvadoran",
                                            "Samoan",
                                            "San Marinese",
                                            "Sao Tomean",
                                            "Saudi",
                                            "Scottish",
                                            "Senegalese",
                                            "Serbian",
                                            "Seychellois",
                                            "Sierra Leonean",
                                            "Singaporean",
                                            "Slovakian",
                                            "Slovenian",
                                            "Solomon Islander",
                                            "Somali",
                                            "South African",
                                            "South Korean",
                                            "Spanish",
                                            "Sri Lankan",
                                            "Sudanese",
                                            "Surinamer",
                                            "Swazi",
                                            "Swedish",
                                            "Swiss",
                                            "Syrian",
                                            "Taiwanese",
                                            "Tajik",
                                            "Tanzanian",
                                            "Thai",
                                            "Togolese",
                                            "Tongan",
                                            "Trinidadian or Tobagonian",
                                            "Tunisian",
                                            "Turkish",
                                            "Tuvaluan",
                                            "Ugandan",
                                            "Ukrainian",
                                            "Uruguayan",
                                            "Uzbekistani",
                                            "Venezuelan",
                                            "Vietnamese",
                                            "Welsh",
                                            "Yemenite",
                                            "Zambian",
                                            "Zimbabwean",
                                        ]
                                mobile:
                                    type: string
                                    description: "Must start with 02, 04, 03, 07, 08 and have 10 digits all together"
                                    example: "0412345678"
                                    pattern: '/^\({0,1}((0|\+61)(2|4|3|7|8)){0,1}\){0,1}(\ |-){0,1}[0-9]{2}(\ |-){0,1}[0-9]{2}(\ |-){0,1}[0-9]{1}(\ |-){0,1}[0-9]{3}$/'
                                address:
                                    type: string
                                    example: "123 Testing Street, NSW 2000"
                                    minLength: 3
                                    maxLength: 100
                required: false
            responses:
                "201":
                    description: "Successfully Created User"
                    headers: {}
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user:
                                        type: object
                                        properties:
                                            email:
                                                type: string
                                                example: user@gmail.com
                                            role:
                                                type: string
                                                example: patient
                                            name:
                                                type: string
                                                example: robert
                                            surname:
                                                type: string
                                                example: alexander
                                    token:
                                        type: string
                                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2ODJjMDFjOTZlZmM0NjE1NGIwNDkiLCJlbWFpbCI6ImRvY3RvcjFAZ21haWwuY29tIiwicm9sZSI6ImRvY3RvciIsIm5hbWUiOiJ1c2VyIiwic3VybmFtZSI6Im9uZSIsImlhdCI6MTYzNTE1NjY3MiwiZXhwIjoxNjM3NzQ4NjcyfQ.9FcHX5E5FX4s8pXppwtwTi4LyczdQV7xag5INty84Yk"
            deprecated: false
            security: []
    /auth/login:
        post:
            tags:
                - auth
            summary: Login
            operationId: Login
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - email
                                - password
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: user@gmail.com
                                password:
                                    type: string
                                    example: User1234!
                required: false
            responses:
                "200":
                    description: "Logged in Successfully"
                    headers: {}
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user:
                                        type: object
                                        properties:
                                            email:
                                                type: string
                                                example: user@gmail.com
                                            role:
                                                type: string
                                                example: patient
                                            name:
                                                type: string
                                                example: robert
                                            surname:
                                                type: string
                                                example: alexander
                                    token:
                                        type: string
                                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2ODJjMDFjOTZlZmM0NjE1NGIwNDkiLCJlbWFpbCI6ImRvY3RvcjFAZ21haWwuY29tIiwicm9sZSI6ImRvY3RvciIsIm5hbWUiOiJ1c2VyIiwic3VybmFtZSI6Im9uZSIsImlhdCI6MTYzNTE1NjY3MiwiZXhwIjoxNjM3NzQ4NjcyfQ.9FcHX5E5FX4s8pXppwtwTi4LyczdQV7xag5INty84Yk"
            deprecated: false
            security: []
    /user:
        get:
            tags:
                - user
            summary: Get All Users
            parameters:
                - name: role
                  in: query
                  required: false
                  schema:
                      type: string
                      enum: [patient, doctor, admin]
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /user/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The user ID
        get:
            tags:
                - user
            summary: Get User
            operationId: GetUser
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        patch:
            tags:
                - user
            summary: Update Users
            operationId: UpdateUser
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - building
                                - floor
                                - room
                                - department
                            type: object
                            properties:
                                building:
                                    type: integer
                                    format: int32
                                    example: 3
                                floor:
                                    type: integer
                                    format: int32
                                    example: 2
                                room:
                                    type: integer
                                    format: int32
                                    example: 1
                                department:
                                    type: string
                                    example: Pediatrics
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /location:
        get:
            tags:
                - location
            summary: Get All Locations
            operationId: GetAllLocations
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        post:
            tags:
                - location
            summary: Create Location
            operationId: CreateLocation
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - building
                                - floor
                                - room
                                - department
                            type: object
                            properties:
                                building:
                                    type: integer
                                    format: int32
                                    example: 9
                                floor:
                                    type: integer
                                    format: int32
                                    example: 6
                                room:
                                    type: integer
                                    format: int32
                                    example: 2
                                department:
                                    type: string
                                    example: Medicine
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /location/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The location ID
        get:
            tags:
                - location
            summary: Get Location
            operationId: GetLocation
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        patch:
            tags:
                - location
            summary: Update Location
            operationId: UpdateLocation
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - building
                                - floor
                                - room
                                - department
                            type: object
                            properties:
                                building:
                                    type: integer
                                    format: int32
                                    example: 3
                                floor:
                                    type: integer
                                    format: int32
                                    example: 2
                                room:
                                    type: integer
                                    format: int32
                                    example: 1
                                department:
                                    type: string
                                    example: Pediatrics
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        delete:
            tags:
                - location
            summary: Delete Location
            operationId: DeleteLocation
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /doctor:
        get:
            tags:
                - doctor
            summary: Get All Doctors
            operationId: GetAllDoctors
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        post:
            tags:
                - doctor
            summary: Create Doctor
            operationId: CreateDoctor
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - department
                                - certification
                            type: object
                            properties:
                                department:
                                    type: string
                                    example: Radiology
                                certification:
                                    type: string
                                    example: BA of Surgery
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /doctor/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The doctor ID
        patch:
            tags:
                - doctor
            summary: Update Doctor
            operationId: UpdateDoctor
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - department
                                - certification
                            type: object
                            properties:
                                department:
                                    type: string
                                    example: Geriatrics
                                certification:
                                    type: string
                                    example: BA of Medicine
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        get:
            tags:
                - doctor
            summary: Get Doctor
            operationId: GetDoctor
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /booking:
        post:
            tags:
                - booking
            summary: Create Booking
            operationId: CreateBooking
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - doctorId
                                - locationId
                                - procedure
                                - description
                                - bookingTime
                            type: object
                            properties:
                                doctorId:
                                    type: string
                                    example: 6154132eb0826a50c66d0596
                                locationId:
                                    type: string
                                    example: 615411f1b0826a50c66d0589
                                procedure:
                                    type: string
                                    example: Appendectomy
                                description:
                                    type: string
                                    example: This is a test for the description
                                bookingTime:
                                    type: integer
                                    format: int64
                                    example: 1632833484405
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        get:
            tags:
                - booking
            summary: Get All Booking
            operationId: GetAllBooking
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /booking/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The booking ID
        get:
            tags:
                - booking
            summary: Get Booking
            operationId: GetBooking
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        patch:
            tags:
                - booking
            summary: Update Booking
            operationId: UpdateBooking
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - doctorId
                                - locationId
                                - procedure
                                - description
                                - bookingTime
                            type: object
                            properties:
                                doctorId:
                                    type: string
                                    example: 6154132eb0826a50c66d0596
                                locationId:
                                    type: string
                                    example: 615411f1b0826a50c66d0589
                                procedure:
                                    type: string
                                    example: Liposuction
                                description:
                                    type: string
                                    example: yes this is a description test
                                bookingTime:
                                    type: integer
                                    format: int64
                                    example: 1632833484405
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        delete:
            tags:
                - booking
            summary: Delete Booking
            operationId: DeleteBooking
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /diagnose:
        get:
            tags:
                - diagnose
            summary: Get All Diagnoses
            operationId: GetAllDiagnoses
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        post:
            tags:
                - diagnose
            summary: Create Diagnose
            operationId: CreateDiagnose
            parameters: []
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        encoding: {}
                        schema:
                            required:
                                - userId
                                - bookingId
                                - issue
                                - outcome
                                - recommendation
                            type: object
                            properties:
                                userId:
                                    type: string
                                    example: 61540ee4b0826a50c66d057d
                                bookingId:
                                    type: string
                                    example: 615413fcb0826a50c66d059e
                                issue:
                                    type: string
                                    example: Appendix Eruption
                                outcome:
                                    type: string
                                    example: Surgical Removal of appendix
                                recommendation:
                                    type: string
                                    example: Anasthetic and Ice the local area
                required: false
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
    /diagnose/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The diagnose ID
        get:
            tags:
                - diagnose
            summary: Get Diagnose
            operationId: GetDiagnose
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
        patch:
            tags:
                - diagnose
            summary: Update Diagnose
            operationId: UpdateDiagnose
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
components:
    securitySchemes:
        httpBearer:
            type: http
            scheme: bearer
security:
    - httpBearer: []
tags:
    - name: auth
    - name: user
    - name: location
    - name: doctor
    - name: booking
    - name: diagnose
